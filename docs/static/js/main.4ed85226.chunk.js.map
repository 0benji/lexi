{"version":3,"sources":["serviceWorker.ts","constants/types.tsx","components/WordsTable.tsx","components/FilterChip.tsx","components/Help.tsx","components/FiltersInput.tsx","components/Settings.tsx","components/Home.tsx","containers/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","FilterType","PartOfSpeech","iconMeaningLike","Icon","iconSoundsLike","iconSpelling","iconRightArrow","iconLeftArrow","iconCopy","iconText","oppositeIcon","categoryIcon","partIcon","filterInfo","type","MEANS_LIKE","icon","text","code","query","SOUNDS_LIKE","SPELLED_LIKE","MODIFIED_BY","MODIFIES","SYNONYMS","TRIGGERS","ANTONYMS","HYPERNYMS","HYPONYMS","HOLONYMS","MERONYMS","FOLLOWS","PRECEDES","RHYMES","NEAR_RHYMES","HOMOPHONES","CONSONANT_MATCHES","getFilterForCode","find","f","getFilterInfo","phonemeMap","AA","AE","AH","AO","AW","AY","B","CH","D","DH","EH","ER","EY","F","G","HH","IH","IY","JH","K","L","M","N","NG","OW","OY","P","R","S","SH","T","TH","UH","UW","V","W","Y","Z","ZH","posCodes","n","NOUN","adj","ADJECTIVE","v","VERB","useStyles","makeStyles","theme","ipa","whiteSpace","pronunciation","fontStyle","color","palette","action","disabled","partOfSpeech","fontSize","display","unknown","emptyIcon","spacing","WordsTable","words","classes","config","useContext","ConfigContext","undefined","Table","TableHead","TableRow","TableCell","showPronunciations","showDefinitions","TableBody","map","word","key","className","phonemes","meanings","meaning","definition","MeaningRow","Box","style","textAlign","alignSelf","Typography","variant","EmptyState","unknownIcon","chip","padding","margin","height","fontFamily","primary","light","inputChip","cursor","exampleChip","secondary","main","filterName","marginRight","filterQuery","contrastText","filterInput","outline","backgroundColor","border","common","black","filterQueryInput","hidden","error","InputChip","props","typeInput","useRef","queryInput","useState","setType","clear","current","innerText","focus","classList","add","doFocus","addEventListener","Chip","tabIndex","join","clickable","onClick","label","contentEditable","onKeyDown","event","getSelection","getRangeAt","startOffset","onDeletePrevious","preventDefault","onInput","currentTarget","innerHTML","includes","maybeNewType","trimEnd","remove","ref","onAddFilter","FilterChip","filter","onDelete","chipType","ExampleChip","helpCard","marginTop","HelpCard","Paper","Object","keys","k","queries","boxSizing","FiltersInput","deleteFilter","index","newFilters","filters","_","i","setFilters","length","Collapse","in","showHelp","SettingsDialog","open","onClose","setConfig","Dialog","aria-labelledby","DialogTitle","id","DialogContent","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","DialogActions","Button","autoFocus","logo","marginLeft","fontWeight","flex","container","flexDirection","footer","Home","hash","enqueueSnackbar","useSnackbar","getLinkHash","split","slug","setWords","processWords","apiWords","tags","tag","startsWith","substring","replace","trim","phoneme","defs","def","posCode","score","useEffect","concat","fetch","then","res","json","catch","console","settingsOpen","setSettingsOpen","toggleSettings","helpOpen","setHelpOpen","AppBar","position","Toolbar","IconButton","edge","link","navigator","clipboard","writeText","anchorOrigin","vertical","horizontal","p","paddingTop","overflow","flexGrow","scrollBehavior","justifyContent","square","defaultConfig","React","createContext","App","createMuiTheme","contrastThreshold","tonalOffset","state","setStateUnsaved","Provider","value","ThemeProvider","maxSnack","rootElement","document","getElementById","hasChildNodes","hydrate","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4ed85226.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Icon} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport enum FilterType {\n    MEANS_LIKE,\n    SOUNDS_LIKE,\n    SPELLED_LIKE,\n    MODIFIED_BY,\n    MODIFIES,\n    SYNONYMS,\n    TRIGGERS,\n    ANTONYMS,\n    HYPERNYMS,\n    HYPONYMS,\n    HOLONYMS,\n    MERONYMS,\n    FOLLOWS,\n    PRECEDES,\n    RHYMES,\n    NEAR_RHYMES,\n    HOMOPHONES,\n    CONSONANT_MATCHES,\n}\n\nconst iconMeaningLike = <Icon>merge_type</Icon>;\nconst iconSoundsLike = <Icon>hearing</Icon>;\nconst iconSpelling = <Icon>edit</Icon>;\nconst iconRightArrow = <Icon>arrow_forward</Icon>;\nconst iconLeftArrow = <Icon>arrow_backward</Icon>;\nconst iconCopy = <Icon>content_copy</Icon>;\nconst iconText = <Icon>description</Icon>;\nconst oppositeIcon = <Icon>swap_horiz</Icon>;\nconst categoryIcon = <Icon>bubble_chart</Icon>;\nconst partIcon = <Icon>extension</Icon>;\n\nexport type FilterInfo = {\n    type: FilterType,\n    icon: JSX.Element,\n    text: string,\n    code: string,\n    query: string\n}\n\nexport const filterInfo = [\n    {type: FilterType.MEANS_LIKE, icon: iconMeaningLike, text: 'meaning like', code: 'ml', query: 'ml'},\n    {type: FilterType.SOUNDS_LIKE, icon: iconSoundsLike, text: 'sounds like', code: 'sl', query: 'sl'},\n    {type: FilterType.SPELLED_LIKE, icon: iconSpelling, text: 'spelled like', code: 'sp', query: 'sp'},\n    {type: FilterType.MODIFIED_BY, icon: iconRightArrow, text: 'modified by', code: 'mb', query: 'rel_jja'},\n    {type: FilterType.MODIFIES, icon: iconLeftArrow, text: 'modifies', code: 'm', query: 'rel_jjb'},\n    {type: FilterType.SYNONYMS, icon: iconCopy, text: 'synonym of', code: 'sy', query: 'rel_syn'},\n    {type: FilterType.TRIGGERS, icon: iconText, text: 'occurs with', code: 'w', query: 'rel_trg'},\n    {type: FilterType.ANTONYMS, icon: oppositeIcon, text: 'antonym of', code: 'an', query: 'rel_ant'},\n    {type: FilterType.HYPERNYMS, icon: categoryIcon, text: 'parent of', code: 'men', query: 'rel_spc'},\n    {type: FilterType.HYPONYMS, icon: categoryIcon, text: 'type of', code: 'typ', query: 'rel_gen'},\n    {type: FilterType.HOLONYMS, icon: partIcon, text: 'part of', code: 'par', query: 'rel_com'},\n    {type: FilterType.MERONYMS, icon: partIcon, text: 'comprises', code: 'com', query: 'rel_par'},\n    {type: FilterType.FOLLOWS, icon: iconRightArrow, text: 'follows', code: 'fol', query: 'rel_bga'},\n    {type: FilterType.PRECEDES, icon: iconLeftArrow, text: 'precedes', code: 'pre', query: 'rel_bgb'},\n    {type: FilterType.RHYMES, icon: iconSoundsLike, text: 'rhymes with', code: 'rhy', query: 'rel_rhy'},\n    {type: FilterType.NEAR_RHYMES, icon: iconSoundsLike, text: 'nearly rhymes with', code: 'nry', query: 'rel_nry'},\n    {type: FilterType.HOMOPHONES, icon: iconSoundsLike, text: 'homophone of', code: 'hom', query: 'rel_hom'},\n    {\n        type: FilterType.CONSONANT_MATCHES,\n        icon: iconSpelling,\n        text: 'shares consonants with',\n        code: 'cns',\n        query: 'rel_cns'\n    }\n]\n\nexport const getFilterForCode = (code: string) => filterInfo.find(f => f.code == code);\nexport const getFilterInfo = (type: FilterType) => filterInfo.find(f => f.type == type);\n\n\nexport type Filter = {\n    type: FilterType;\n    query: string;\n};\n\nexport type ApiWord = {\n    word: string,\n    score: number,\n    numSyllables: number,\n    tags: Array<string>,\n    defs: Array<string>\n}\n\nexport const phonemeMap = {\n    AA: 'ah',\n    AE: 'a',\n    AH: 'uh',\n    AO: 'or',\n    AW: 'ow',\n    AY: 'eye',\n    B: 'b',\n    CH: 'ch',\n    D: 'd',\n    DH: 'th',\n    EH: 'eh',\n    ER: 'er',\n    EY: 'ay',\n    F: 'f',\n    G: 'g',\n    HH: 'h',\n    IH: 'ih',\n    IY: 'ee',\n    JH: 'j',\n    K: 'k',\n    L: 'l',\n    M: 'm',\n    N: 'n',\n    NG: 'ng',\n    OW: 'oh',\n    OY: 'oy',\n    P: 'p',\n    R: 'r',\n    S: 's',\n    SH: 'sh',\n    T: 't',\n    TH: 'th',\n    UH: 'u',\n    UW: 'ooh',\n    V: 'v',\n    W: 'w',\n    Y: 'y',\n    Z: 'z',\n    ZH: 'zsh'\n};\n\nexport enum PartOfSpeech {\n    UNKNOWN, NOUN, ADJECTIVE, VERB\n}\n\nexport const posCodes = {\n    n: PartOfSpeech.NOUN,\n    adj: PartOfSpeech.ADJECTIVE,\n    v: PartOfSpeech.VERB\n};\n\nexport type Meaning = {\n    partOfSpeech: PartOfSpeech,\n    definition: string\n}\n","import {Box, Icon, Table, TableBody, TableCell, TableHead, TableRow, Typography} from '@material-ui/core';\nimport React, {useContext} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Meaning, PartOfSpeech} from '../constants/types';\nimport {ConfigContext} from '../containers/App';\n\nexport type TableWord = {\n  word: string,\n  meanings: Array<Meaning>\n  phonemes: string,\n  ipa: string,\n  score: number\n};\n\nconst useStyles = makeStyles((theme) => ({\n  ipa: {\n    whiteSpace: 'nowrap'\n  },\n  pronunciation: {\n    fontStyle: 'italic',\n    color: theme.palette.action.disabled,\n    whiteSpace: 'nowrap'\n  },\n  partOfSpeech: {\n    fontSize: 12,\n    color: theme.palette.action.disabled,\n    display: 'block'\n  },\n  unknown: {\n    color: theme.palette.action.disabled\n  },\n  emptyIcon: {\n    fontSize: theme.spacing(20),\n  },\n}));\n\nfunction EmptyState(classes: Record<\"ipa\" | \"pronunciation\" | \"partOfSpeech\" | \"unknown\" | \"emptyIcon\", string>) {\n  return (\n    <Box style={{ textAlign: 'center', color: '#ddd' }} alignSelf={'center'} >\n      <Icon className={classes.emptyIcon}>translate</Icon>\n      <Typography variant={'h5'}>Add a filter to see results</Typography>\n    </Box>\n  );\n}\n\nfunction MeaningRow(meaning: Meaning, classes: Record<\"ipa\" | \"pronunciation\" | \"partOfSpeech\" | \"unknown\" | \"emptyIcon\", string>): JSX.Element {\n  return (\n    <span>\n      <span className={classes.partOfSpeech}>{PartOfSpeech[meaning.partOfSpeech]}</span>\n      <span>{meaning.definition}</span>\n    </span>\n  );\n}\n\nexport default function WordsTable({ words }: { words: Array<TableWord> | undefined }) {\n  const classes = useStyles();\n\n  const { config } = useContext(ConfigContext);\n\n  return words !== undefined ? (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Word</TableCell>\n          {config.showPronunciations && <TableCell>Pronunciation</TableCell>}\n          {config.showDefinitions && <TableCell>Meaning</TableCell>}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {words.map((word: TableWord) => (\n          <TableRow key={word.word}>\n            <TableCell>{word.word}</TableCell>\n            {\n              config.showPronunciations &&\n              <TableCell>\n                <span className={classes.ipa}>{word.ipa}</span>{'\\u2003'}<span\n                className={classes.pronunciation}>{word.phonemes}</span>\n              </TableCell>\n            }\n            {\n              config.showDefinitions &&\n              <TableCell>{word.meanings ?\n                MeaningRow(word.meanings[0], classes)\n                : <span className={classes.unknown}>unknown</span>}</TableCell>\n            }\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  ) : EmptyState(classes);\n}\n","import {Chip, Icon} from '@material-ui/core';\nimport React, {useRef, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Filter, FilterType, getFilterForCode, getFilterInfo} from '../constants/types';\n\nconst unknownIcon = <Icon>help</Icon>;\n\nconst useStyles = makeStyles((theme) => ({\n    chip: {\n        padding: theme.spacing(0.5),\n        margin: theme.spacing(1),\n        height: 'auto',\n        fontSize: 17,\n        fontFamily: 'monospace',\n        color: theme.palette.primary.light\n    },\n    inputChip: {\n        cursor: 'pointer'\n    },\n    exampleChip: {\n        color: theme.palette.secondary.main,\n    },\n    filterName: {\n        color: theme.palette.primary.light,\n        marginRight: theme.spacing(1)\n    },\n    filterQuery: {\n        color: theme.palette.primary.contrastText\n    },\n    filterInput: {\n        outline: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: theme.palette.common.black,\n        fontFamily: 'monospace',\n        marginRight: theme.spacing(1)\n    },\n    filterQueryInput: {\n        color: theme.palette.primary.contrastText\n    },\n    hidden: {\n        display: 'none'\n    },\n    error: {\n        color: 'red'\n    }\n}));\n\nexport function InputChip(props: {\n    onAddFilter: (filter: Filter) => void,\n    onDeletePrevious: () => void,\n}): JSX.Element {\n    const classes = useStyles();\n    const typeInput = useRef<HTMLElement>(null);\n    const queryInput = useRef<HTMLElement>(null);\n\n    const [type, setType] = useState<FilterType | undefined>(undefined);\n    const clear = () => {\n        if (queryInput.current && typeInput.current) {\n            queryInput.current.innerText = '';\n            typeInput.current.innerText = '';\n            typeInput.current.focus();\n            queryInput.current.classList.add(classes.hidden);\n        }\n        setType(undefined);\n    };\n\n    const onTypeInput = (event: React.FormEvent<HTMLElement>) => {\n        if (!event.currentTarget.innerHTML.includes('&nbsp;'))\n            return;\n        const maybeNewType = getFilterForCode(event.currentTarget.innerText.trimEnd());\n        if (!maybeNewType)\n            return event.currentTarget.classList.add(classes.error);\n\n        event.currentTarget.classList.remove(classes.error);\n        event.currentTarget.innerText = maybeNewType.text;\n        queryInput.current!.classList.remove(classes.hidden);\n        if (queryInput.current) {\n            queryInput.current.focus();\n        }\n        setType(maybeNewType.type);\n    };\n\n    const onTypeInputKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        if (event.key == 'Backspace'\n            && window.getSelection()?.getRangeAt(0).startOffset === 0)\n            props.onDeletePrevious();\n        else if (event.key == 'Enter')\n            event.preventDefault();\n    };\n\n    const onQueryInputKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        if (event.key == 'Backspace'\n            && window.getSelection()?.getRangeAt(0).startOffset === 0)\n            clear();\n        else if (event.key == 'Enter')\n            event.preventDefault();\n    };\n\n    const onQueryInput = (event: React.FormEvent<HTMLElement>) => {\n        if (event.currentTarget.innerHTML.includes('&nbsp;')) {\n            props.onAddFilter({\n                type: type as FilterType,\n                query: event.currentTarget.innerText.trimEnd()\n            });\n            clear();\n        }\n    };\n\n    const doFocus = () => {\n        if(type !== undefined) {\n            queryInput!.current && queryInput.current.focus();\n        } else {\n            typeInput!.current && typeInput.current.focus();\n        }\n    }\n    // useEffect(doFocus, [type])\n\n    // props.setFocusInput(doFocus);\n    window.addEventListener(\"load\", doFocus);\n\n    return (\n        <Chip\n            tabIndex={-1}\n            className={[classes.chip, classes.inputChip].join(' ')}\n            icon={\n                type !== undefined ? getFilterInfo(type)?.icon : unknownIcon\n            }\n            clickable={false}\n            onClick={doFocus}\n            label={\n                <span>\n          <span\n              contentEditable\n              className={classes.filterInput}\n              onKeyDown={onTypeInputKeyDown}\n              onInput={onTypeInput}\n              ref={typeInput}\n          />\n          <span\n              contentEditable\n              className={[classes.filterInput, classes.hidden].join(' ')}\n              onKeyDown={onQueryInputKeyDown}\n              onInput={onQueryInput}\n              ref={queryInput}\n          />\n        </span>\n            }\n        />\n    );\n}\n\nexport default function FilterChip({\n                                       filter,\n                                       onDelete\n                                   }: {\n    filter: Filter;\n    onDelete: () => void;\n}) {\n    const classes = useStyles();\n\n    const chipType = getFilterInfo(filter.type);\n    if (chipType == null) return null;\n\n    return (\n        <Chip\n            className={classes.chip}\n            onDelete={onDelete}\n            icon={chipType.icon}\n            label={\n                <span>\n          <span className={classes.filterName}>{chipType.text}</span>\n          <span className={classes.filterQuery}>{filter.query}</span>\n        </span>\n            }\n            color=\"primary\"\n        />\n    );\n}\n\n\nexport function ExampleChip({type}: { type: FilterType }) {\n    const classes = useStyles();\n\n    const chipType = getFilterInfo(type);\n    if (chipType == null) return null;\n\n    return (\n        <Chip\n            variant={'outlined'}\n            className={[classes.chip, classes.exampleChip].join(' ')}\n            icon={chipType.icon}\n            label={<span>{chipType.text}</span>}\n            color=\"secondary\"\n        />\n    );\n}\n","import {Button, Dialog, DialogActions, DialogContent, DialogTitle, Paper} from '@material-ui/core';\nimport React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {FilterType} from \"../constants/types\";\nimport {ExampleChip} from \"./FilterChip\";\n\nconst useStyles = makeStyles((theme) => ({\n    helpCard: {\n      padding: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    }\n  }\n));\n\nexport function HelpCard() {\n  const classes = useStyles();\n\n    return (\n    <Paper className={classes.helpCard} variant={'outlined'}>\n      {\n          // @ts-ignore\n        Object.keys(FilterType).map(k => <ExampleChip key={k} type={FilterType[k]}/>)\n      }\n    </Paper>\n  );\n}\n\nexport function HelpDialog({ open, onClose }: { open: boolean, onClose: () => void }) {\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" onClose={onClose} open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Help</DialogTitle>\n      <DialogContent>\n          <HelpCard></HelpCard>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {Box, Collapse, Paper} from '@material-ui/core';\nimport React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport FilterChip, {InputChip} from './FilterChip';\nimport {Filter} from '../constants/types';\nimport {HelpCard} from './Help';\n\nconst useStyles = makeStyles((theme) => ({\n  queries: {\n    padding: theme.spacing(1),\n    boxSizing: 'border-box',\n    marginTop: 0\n  },\n  filterName: {\n    color: theme.palette.primary.light,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nexport default function FiltersInput(props: {\n  // onFiltersChanged: (filters: Array<Filter>) => void,\n  showHelp: boolean,\n  filters: Array<Filter>,\n  setFilters: (filters: Array<Filter>) => void,\n  // setFocusInput: (focusInput: () => void) => void,\n  // setFocus: (focus: (() => void)) => void,\n  // setInputRef: (inputRef: React.RefObject<HTMLElement>) => void,\n}): JSX.Element {\n  const classes = useStyles();\n\n  const deleteFilter = (index: number) => {\n    const newFilters = props.filters.filter((_, i) => i !== index);\n    props.setFilters(newFilters);\n  };\n\n\n  const addFilter = (filter: Filter): void => {\n    const newFilters = [\n      ...props.filters.filter((f) => f.type !== filter.type),\n      filter\n    ];\n    props.setFilters(newFilters);\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.queries}>\n      <Box>\n        {props.filters.map((filter, index) => (\n          <FilterChip\n            key={filter.type}\n            filter={filter}\n            onDelete={() => deleteFilter(index)}\n          />\n        ))}\n        <InputChip\n          onAddFilter={addFilter}\n          onDeletePrevious={() => deleteFilter(props.filters.length - 1)}\n          // setFocus={props.setFocus}\n        />\n      </Box>\n      <Collapse in={props.showHelp}>\n        <HelpCard />\n      </Collapse>\n    </Paper>\n  );\n}\n","import {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  FormGroup\n} from '@material-ui/core';\nimport React, {useContext} from 'react';\nimport {ConfigContext} from '../containers/App';\n\nexport function SettingsDialog({ open, onClose }: { open: boolean, onClose: () => void }) {\n  const { config, setConfig } = useContext(ConfigContext);\n\n  const togglePronunciation = () => setConfig({ ...config, showPronunciations: !config.showPronunciations });\n  const toggleDefinitions = () => setConfig({ ...config, showDefinitions: !config.showDefinitions });\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" onClose={ onClose } open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\n        <DialogContent>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={config.showPronunciations}\n                  onChange={togglePronunciation}/>}\n              label=\"Show pronunciations\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={config.showDefinitions}\n                  onChange={toggleDefinitions}/>}\n              label=\"Show definitions\"\n            />\n          </FormGroup>\n        </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport {AppBar, Box, Icon, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport WordsTable, {TableWord} from './WordsTable';\nimport FiltersInput from './FiltersInput';\nimport {ApiWord, Filter, getFilterForCode, getFilterInfo, phonemeMap, posCodes} from '../constants/types';\nimport {SettingsDialog} from './Settings';\nimport {useSnackbar} from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        fontFamily: 'monospace',\n        marginLeft: theme.spacing(2),\n        fontWeight: 'bold',\n        flex: 1\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    footer: {\n        padding: theme.spacing(1)\n    }\n}));\n\nconst API_ROOT = 'https://api.datamuse.com/words?';\nconst LEXI_ROOT = 'https://lexi.fyi/';\n\nexport default function Home(): JSX.Element {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const classes = useStyles();\n    const fromHash = (hash: string) => {\n        return hash ? hash.split(\"#\")[1].split(\"&\")\n            .map((slug) => slug.split(\"=\"))\n            .filter(([type, _]) => getFilterForCode(type))\n            .map(([type, query]) => ({\n                type: getFilterForCode(type)!.type,\n                query: query\n            })) : [];\n    }\n    const getLinkHash = () => filters.map(filter => `${getFilterInfo(filter.type)?.code}=${filter.query}`).join(\"&\");\n    const copyLink = () => {\n        let link = `${LEXI_ROOT}#${getLinkHash()}`;\n        navigator.clipboard.writeText(link);\n        enqueueSnackbar(`Copied link: ${link}`, {\n            variant: \"success\",\n            anchorOrigin: {\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }\n        })\n        // focusInput();\n    }\n\n    // const inputRef = useRef<HTMLElement>(null);\n    // const [focusInput, setFocusInput] = useState<(() => void)>(() => {});\n    const [filters, setFilters] = useState<Array<Filter>>(fromHash(window.location.hash));\n    const [words, setWords] = useState<Array<TableWord> | undefined>(undefined);\n\n    const processWords = (apiWords: Array<ApiWord>) => {\n        setWords(apiWords.map(word => {\n            const ipa = word.tags\n                .find(tag => tag.startsWith('ipa_pron'))?.substring(9);\n            const phonemes = word.tags\n                .find(tag => tag.startsWith('pron'))?.substring(5).replace(/[0-9]/gi, '').trim().split(' ')\n                // @ts-ignore\n                .map(phoneme => phonemeMap[phoneme]).join('-');\n\n            const meanings = word.defs\n                ? word.defs\n                    .map(def => def.split('\\t'))\n                    // @ts-ignore\n                    .map(([posCode, def]) => ({partOfSpeech: posCodes[posCode], definition: def}))\n                : undefined;\n\n            return {\n                word: word.word,\n                meanings,\n                ipa,\n                phonemes,\n                score: word.score\n            } as TableWord;\n        }));\n    };\n\n    const onFiltersChanged = () => {\n        window.location.hash = getLinkHash();\n        if (!filters.length) {\n            setWords(undefined);\n            return;\n        }\n\n        const query =\n            API_ROOT +\n            filters\n                .map((filter) => `${getFilterInfo(filter.type)?.query}=${filter.query}`)\n                .concat(['max=1000'])\n                .concat(['md=dr'])\n                .concat(['ipa=1'])\n                .join('&');\n\n        fetch(query)\n            .then((res) => res.json())\n            .then(processWords)\n            .catch(console.error);\n    };\n    useEffect(onFiltersChanged, [filters]);\n\n    const [settingsOpen, setSettingsOpen] = useState(false);\n    const toggleSettings = () => setSettingsOpen(!settingsOpen);\n\n    const [helpOpen, setHelpOpen] = useState(false);\n    const toggleHelp = () => setHelpOpen(!helpOpen);\n\n    // useEffect(() => {\n    //     if(settingsOpen || helpOpen || !focusInput)\n    //         return;\n    //     focusInput();\n    // }, [settingsOpen, helpOpen]);\n\n    return (\n        <Box height=\"100%\" className={classes.container}>\n            <AppBar position=\"sticky\">\n                <Toolbar className=\"draggable\">\n                    <Icon fontSize=\"large\">translate</Icon>\n                    <Typography variant=\"h6\" className={classes.logo}>\n                        Lexi\n                    </Typography>\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        onClick={copyLink}\n                        tabIndex={-1}\n                        className=\"not-draggable\">\n                        <Icon>link</Icon>\n                    </IconButton>\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        onClick={toggleHelp}\n                        tabIndex={-1}\n                        className=\"not-draggable\">\n                        <Icon>help</Icon>\n                    </IconButton>\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        onClick={toggleSettings}\n                        tabIndex={-1}\n                        className=\"not-draggable\">\n                        <Icon>settings</Icon>\n                    </IconButton>\n                </Toolbar>\n                <Box p={2} paddingTop={0}>\n                    <FiltersInput setFilters={setFilters} showHelp={helpOpen} filters={filters}/>\n                </Box>\n            </AppBar>\n            <SettingsDialog open={settingsOpen} onClose={toggleSettings}/>\n            <Box style={{overflow: 'auto', flexGrow: 1, scrollBehavior: 'smooth'}} display={'flex'}\n                 justifyContent={'center'}>\n                <WordsTable words={words}/>\n            </Box>\n            <Paper square className={classes.footer} variant=\"outlined\">\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                    {`${words !== undefined ? words.length : 0} results`}\n                </Typography>\n            </Paper>\n        </Box>\n    );\n}\n","import {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport React, {useState} from 'react';\nimport Home from '../components/Home';\n\nexport type Config = {\n    showPronunciations: boolean,\n    showDefinitions: boolean,\n}\n\nconst defaultConfig: Config = {\n    showPronunciations: true,\n    showDefinitions: true,\n};\n\nexport const ConfigContext = React.createContext<{ config: Config, setConfig: (config: Config) => void }>({\n    config: defaultConfig,\n    setConfig: () => {\n    }\n});\n\n\nexport default function App() {\n\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n            },\n            contrastThreshold: 3,\n            // Used by the functions below to shift a color's luminance by approximately\n            // two indexes within its tonal palette.\n            // E.g., shift from Red 500 to Red 300 or Red 700.\n            tonalOffset: 0.2,\n        },\n    });\n\n    const [state, setStateUnsaved] = useState<Config>(defaultConfig);\n    return <ConfigContext.Provider value={{config: state, setConfig: setStateUnsaved}}>\n        <ThemeProvider theme={theme}>\n            <SnackbarProvider maxSnack={1}>\n                <Home/>\n            </SnackbarProvider>\n        </ThemeProvider>\n    </ConfigContext.Provider>;\n\n}\n","import React from 'react';\nimport {hydrate, render} from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./containers/App\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement?.hasChildNodes()) {\n    hydrate(<App />, rootElement);\n} else {\n    render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
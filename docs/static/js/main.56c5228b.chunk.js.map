{"version":3,"sources":["serviceWorker.ts","constants/types.tsx","components/WordsTable.tsx","components/FilterChip.tsx","components/Help.tsx","components/FiltersInput.tsx","components/Settings.tsx","components/Home.tsx","containers/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","FilterType","PartOfSpeech","filterKeys","Map","MEANS_LIKE","SPELLED_LIKE","SOUNDS_LIKE","MODIFIED_BY","MODIFIES","SYNONYMS","TRIGGERS","ANTONYMS","HYPERNYMS","HYPONYMS","HOLONYMS","MERONYMS","FOLLOWS","PRECEDES","RHYMES","NEAR_RHYMES","HOMOPHONES","CONSONANT_MATCHES","filterQueries","phonemeMap","AA","AE","AH","AO","AW","AY","B","CH","D","DH","EH","ER","EY","F","G","HH","IH","IY","JH","K","L","M","N","NG","OW","OY","P","R","S","SH","T","TH","UH","UW","V","W","Y","Z","ZH","posCodes","n","NOUN","adj","ADJECTIVE","v","VERB","useStyles","makeStyles","theme","ipa","whiteSpace","pronunciation","fontStyle","color","palette","action","disabled","partOfSpeech","fontSize","display","unknown","emptyIcon","spacing","WordsTable","words","classes","config","useContext","ConfigContext","undefined","Table","TableHead","TableRow","TableCell","showPronunciations","showDefinitions","TableBody","map","word","key","className","phonemes","meanings","meaning","definition","MeaningRow","Box","style","textAlign","alignSelf","Icon","Typography","variant","EmptyState","iconMeaningLike","iconSoundsLike","iconSpelling","iconRightArrow","iconLeftArrow","iconCopy","iconText","oppositeIcon","categoryIcon","partIcon","unknownIcon","filterChipTypes","icon","text","chip","padding","margin","height","fontFamily","primary","light","inputChip","cursor","exampleChip","secondary","main","filterName","marginRight","filterQuery","contrastText","filterInput","outline","backgroundColor","border","common","black","filterQueryInput","hidden","error","InputChip","props","typeInput","useRef","queryInput","useState","newType","setNewType","clear","current","innerText","focus","classList","add","doFocus","addEventListener","Chip","tabIndex","join","get","onClick","label","contentEditable","onKeyDown","event","getSelection","getRangeAt","startOffset","onDeletePrevious","preventDefault","onInput","currentTarget","innerHTML","includes","maybeNewType","trimEnd","remove","ref","onAddFilter","type","query","FilterChip","filter","onDelete","chipType","helpCard","marginTop","HelpCard","Paper","queries","boxSizing","FiltersInput","filters","setFilters","deleteFilter","index","newFilters","_","i","onFiltersChanged","f","length","Collapse","in","showHelp","SettingsDialog","open","onClose","setConfig","Dialog","aria-labelledby","DialogTitle","id","DialogContent","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","DialogActions","Button","autoFocus","logo","marginLeft","fontWeight","flex","container","flexDirection","footer","Home","setWords","processWords","apiWords","tags","find","tag","startsWith","substring","replace","trim","split","phoneme","defs","def","posCode","score","settingsOpen","setSettingsOpen","toggleSettings","helpOpen","setHelpOpen","AppBar","position","Toolbar","IconButton","edge","p","paddingTop","concat","fetch","then","res","json","catch","console","overflow","flexGrow","scrollBehavior","justifyContent","square","defaultConfig","React","createContext","App","state","setStateUnsaved","Provider","value","rootElement","document","getElementById","hasChildNodes","hydrate","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.56c5228b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum FilterType {\n  MEANS_LIKE,\n  SOUNDS_LIKE,\n  SPELLED_LIKE,\n  MODIFIED_BY,\n  MODIFIES,\n  SYNONYMS,\n  TRIGGERS,\n  ANTONYMS,\n  HYPERNYMS,\n  HYPONYMS,\n  HOLONYMS,\n  MERONYMS,\n  FOLLOWS,\n  PRECEDES,\n  RHYMES,\n  NEAR_RHYMES,\n  HOMOPHONES,\n  CONSONANT_MATCHES,\n}\n\nexport type Filter = {\n  type: FilterType;\n  query: string;\n};\n\nexport const filterKeys = new Map([\n  ['ml', FilterType.MEANS_LIKE],\n  ['sp', FilterType.SPELLED_LIKE],\n  ['sl', FilterType.SOUNDS_LIKE],\n  ['mb', FilterType.MODIFIED_BY],\n  ['m', FilterType.MODIFIES],\n  ['sy', FilterType.SYNONYMS],\n  ['w', FilterType.TRIGGERS],\n  ['an', FilterType.ANTONYMS],\n  ['mem', FilterType.HYPERNYMS],\n  ['typ', FilterType.HYPONYMS],\n  ['par', FilterType.HOLONYMS],\n  ['com', FilterType.MERONYMS],\n  ['fol', FilterType.FOLLOWS],\n  ['pre', FilterType.PRECEDES],\n  ['rhy', FilterType.RHYMES],\n  ['nry', FilterType.NEAR_RHYMES],\n  ['hom', FilterType.HOMOPHONES],\n  ['con', FilterType.CONSONANT_MATCHES],\n]);\n\nexport const filterQueries = new Map([\n  [FilterType.MEANS_LIKE, 'ml'],\n  [FilterType.SPELLED_LIKE, 'sp'],\n  [FilterType.SOUNDS_LIKE, 'sl'],\n  [FilterType.MODIFIED_BY, 'rel_jja'],\n  [FilterType.MODIFIES, 'rel_jjb'],\n  [FilterType.SYNONYMS, 'rel_syn'],\n  [FilterType.TRIGGERS, 'rel_trg'],\n  [FilterType.ANTONYMS, 'rel_ant'],\n  [FilterType.HYPERNYMS, 'rel_spc'],\n  [FilterType.HYPONYMS, 'rel_gen'],\n  [FilterType.HOLONYMS, 'rel_com'],\n  [FilterType.MERONYMS, 'rel_par'],\n  [FilterType.FOLLOWS, 'rel_bga'],\n  [FilterType.PRECEDES, 'rel_bgb'],\n  [FilterType.RHYMES, 'rel_rhy'],\n  [FilterType.NEAR_RHYMES, 'rel_nry'],\n  [FilterType.HOMOPHONES, 'rel_hom'],\n  [FilterType.CONSONANT_MATCHES, 'rel_cns'],\n]);\n\nexport type ApiWord = {\n  word: string,\n  score: number,\n  numSyllables: number,\n  tags: Array<string>,\n  defs: Array<string>\n}\n\nexport const phonemeMap = {\n  AA: 'ah',\n  AE: 'a',\n  AH: 'uh',\n  AO: 'or',\n  AW: 'ow',\n  AY: 'eye',\n  B: 'b',\n  CH: 'ch',\n  D: 'd',\n  DH: 'th',\n  EH: 'eh',\n  ER: 'er',\n  EY: 'ay',\n  F: 'f',\n  G: 'g',\n  HH: 'h',\n  IH: 'ih',\n  IY: 'ee',\n  JH: 'j',\n  K: 'k',\n  L: 'l',\n  M: 'm',\n  N: 'n',\n  NG: 'ng',\n  OW: 'oh',\n  OY: 'oy',\n  P: 'p',\n  R: 'r',\n  S: 's',\n  SH: 'sh',\n  T: 't',\n  TH: 'th',\n  UH: 'u',\n  UW: 'ooh',\n  V: 'v',\n  W: 'w',\n  Y: 'y',\n  Z: 'z',\n  ZH: 'zsh'\n};\n\nexport enum PartOfSpeech {\n  UNKNOWN, NOUN, ADJECTIVE, VERB\n}\n\nexport const posCodes = {\n  n: PartOfSpeech.NOUN,\n  adj: PartOfSpeech.ADJECTIVE,\n  v: PartOfSpeech.VERB\n};\n\nexport type Meaning = {\n  partOfSpeech: PartOfSpeech,\n  definition: string\n}\n","import {Box, Icon, Table, TableBody, TableCell, TableHead, TableRow, Typography} from '@material-ui/core';\nimport React, {useContext} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Meaning, PartOfSpeech} from '../constants/types';\nimport {ConfigContext} from '../containers/App';\n\nexport type TableWord = {\n  word: string,\n  meanings: Array<Meaning>\n  phonemes: string,\n  ipa: string,\n  score: number\n};\n\nconst useStyles = makeStyles((theme) => ({\n  ipa: {\n    whiteSpace: 'nowrap'\n  },\n  pronunciation: {\n    fontStyle: 'italic',\n    color: theme.palette.action.disabled,\n    whiteSpace: 'nowrap'\n  },\n  partOfSpeech: {\n    fontSize: 12,\n    color: theme.palette.action.disabled,\n    display: 'block'\n  },\n  unknown: {\n    color: theme.palette.action.disabled\n  },\n  emptyIcon: {\n    fontSize: theme.spacing(20),\n  },\n}));\n\nfunction EmptyState(classes: Record<\"ipa\" | \"pronunciation\" | \"partOfSpeech\" | \"unknown\" | \"emptyIcon\", string>) {\n  return (\n    <Box style={{ textAlign: 'center', color: '#ddd' }} alignSelf={'center'} >\n      <Icon className={classes.emptyIcon}>translate</Icon>\n      <Typography variant={'h5'}>Add a filter to see results</Typography>\n    </Box>\n  );\n}\n\nfunction MeaningRow(meaning: Meaning, classes: Record<\"ipa\" | \"pronunciation\" | \"partOfSpeech\" | \"unknown\" | \"emptyIcon\", string>): JSX.Element {\n  return (\n    <span>\n      <span className={classes.partOfSpeech}>{PartOfSpeech[meaning.partOfSpeech]}</span>\n      <span>{meaning.definition}</span>\n    </span>\n  );\n}\n\nexport default function WordsTable({ words }: { words: Array<TableWord> | undefined }) {\n  const classes = useStyles();\n\n  const { config } = useContext(ConfigContext);\n\n  return words !== undefined ? (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Word</TableCell>\n          {config.showPronunciations && <TableCell>Pronunciation</TableCell>}\n          {config.showDefinitions && <TableCell>Meaning</TableCell>}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {words.map((word: TableWord) => (\n          <TableRow key={word.word}>\n            <TableCell>{word.word}</TableCell>\n            {\n              config.showPronunciations &&\n              <TableCell>\n                <span className={classes.ipa}>{word.ipa}</span>{'\\u2003'}<span\n                className={classes.pronunciation}>{word.phonemes}</span>\n              </TableCell>\n            }\n            {\n              config.showDefinitions &&\n              <TableCell>{word.meanings ?\n                MeaningRow(word.meanings[0], classes)\n                : <span className={classes.unknown}>unknown</span>}</TableCell>\n            }\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  ) : EmptyState(classes);\n}\n","import { Chip, Icon } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Filter, filterKeys, FilterType } from '../constants/types';\n\nconst iconMeaningLike = <Icon>merge_type</Icon>;\nconst iconSoundsLike = <Icon>hearing</Icon>;\nconst iconSpelling = <Icon>edit</Icon>;\nconst iconRightArrow = <Icon>arrow_forward</Icon>;\nconst iconLeftArrow = <Icon>arrow_backward</Icon>;\nconst iconCopy = <Icon>content_copy</Icon>;\nconst iconText = <Icon>description</Icon>;\nconst oppositeIcon = <Icon>swap_horiz</Icon>;\nconst categoryIcon = <Icon>bubble_chart</Icon>;\nconst partIcon = <Icon>extension</Icon>;\nconst unknownIcon = <Icon>help</Icon>;\n\nconst filterChipTypes = new Map([\n  [FilterType.MEANS_LIKE, { icon: iconMeaningLike, text: 'meaning like' }],\n  [FilterType.SOUNDS_LIKE, { icon: iconSoundsLike, text: 'sounds like' }],\n  [FilterType.SPELLED_LIKE, { icon: iconSpelling, text: 'spelled like' }],\n  [FilterType.MODIFIED_BY, { icon: iconRightArrow, text: 'modified by' }],\n  [FilterType.MODIFIES, { icon: iconLeftArrow, text: 'modifies' }],\n  [FilterType.SYNONYMS, { icon: iconCopy, text: 'synonym of' }],\n  [FilterType.TRIGGERS, { icon: iconText, text: 'occurs with' }],\n  [FilterType.ANTONYMS, { icon: oppositeIcon, text: 'antonym of' }],\n  [FilterType.HYPERNYMS, { icon: categoryIcon, text: 'parent of' }],\n  [FilterType.HYPONYMS, { icon: categoryIcon, text: 'type of' }],\n  [FilterType.HOLONYMS, { icon: partIcon, text: 'part of' }],\n  [FilterType.MERONYMS, { icon: partIcon, text: 'comprises' }],\n  [FilterType.FOLLOWS, { icon: iconRightArrow, text: 'follows' }],\n  [FilterType.PRECEDES, { icon: iconLeftArrow, text: 'precedes' }],\n  [FilterType.RHYMES, { icon: iconSoundsLike, text: 'rhymes with' }],\n  [\n    FilterType.NEAR_RHYMES,\n    { icon: iconSoundsLike, text: 'nearly rhymes with' }\n  ],\n  [FilterType.HOMOPHONES, { icon: iconSoundsLike, text: 'homophone of' }],\n  [\n    FilterType.CONSONANT_MATCHES,\n    { icon: iconSpelling, text: 'shares consonants with' }\n  ]\n]);\n\nconst useStyles = makeStyles((theme) => ({\n  chip: {\n    padding: theme.spacing(0.5),\n    margin: theme.spacing(1),\n    height: 'auto',\n    fontSize: 17,\n    fontFamily: 'monospace',\n    color: theme.palette.primary.light\n  },\n  inputChip: {\n    cursor: 'pointer'\n  },\n  exampleChip: {\n    color: theme.palette.secondary.main,\n  },\n  filterName: {\n    color: theme.palette.primary.light,\n    marginRight: theme.spacing(1)\n  },\n  filterQuery: {\n    color: theme.palette.primary.contrastText\n  },\n  filterInput: {\n    outline: 'none',\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: theme.palette.common.black,\n    fontFamily: 'monospace',\n    marginRight: theme.spacing(1)\n  },\n  filterQueryInput: {\n    color: theme.palette.primary.contrastText\n  },\n  hidden: {\n    display: 'none'\n  },\n  error: {\n    color: 'red'\n  }\n}));\n\nexport function InputChip(props: {\n  onAddFilter: (filter: Filter) => void;\n  onDeletePrevious: () => void;\n}): JSX.Element {\n  const classes = useStyles();\n  const typeInput = useRef<HTMLElement>(null);\n  const queryInput = useRef<HTMLElement>(null);\n\n  const [newType, setNewType] = useState<FilterType | undefined>(undefined);\n\n  const clear = () => {\n    setNewType(undefined);\n    if(queryInput.current && typeInput.current) {\n      queryInput.current.innerText = '';\n      typeInput.current.innerText = '';\n      typeInput.current.focus();\n      queryInput.current.classList.add(classes.hidden);\n    }\n  };\n\n  const onTypeInput = (event: React.FormEvent<HTMLElement>) => {\n    if (event.currentTarget.innerHTML.includes('&nbsp;')) {\n      const maybeNewType = filterKeys.get(\n        event.currentTarget.innerText.trimEnd()\n      );\n      if (maybeNewType !== undefined) {\n        setNewType(maybeNewType);\n        event.currentTarget.innerText = filterChipTypes.get(maybeNewType)\n          ?.text as string;\n        if(queryInput.current) {\n          queryInput.current.classList.remove(classes.hidden);\n          queryInput.current.focus();\n        }\n      } else {\n        event.currentTarget.classList.add(classes.error);\n      }\n    } else {\n      event.currentTarget.classList.remove(classes.error);\n    }\n  };\n\n  const onTypeInputKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key == 'Backspace'\n      && window.getSelection()?.getRangeAt(0).startOffset === 0)\n      props.onDeletePrevious();\n    else if (event.key == 'Enter')\n      event.preventDefault();\n  };\n\n  const onQueryInputKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key == 'Backspace'\n      && window.getSelection()?.getRangeAt(0).startOffset === 0)\n      clear();\n    else if (event.key == 'Enter')\n      event.preventDefault();\n  };\n\n  const onQueryInput = (event: React.FormEvent<HTMLElement>) => {\n    if (event.currentTarget.innerHTML.includes('&nbsp;')) {\n      props.onAddFilter({\n        type: newType as FilterType,\n        query: event.currentTarget.innerText.trimEnd()\n      });\n      clear();\n    }\n  };\n\n  const doFocus = () =>\n    newType ? queryInput.current && queryInput.current.focus() : typeInput.current && typeInput.current.focus();\n\n  window.addEventListener(\"load\", doFocus);\n\n  return (\n    <Chip\n      tabIndex={-1}\n      className={[classes.chip, classes.inputChip].join(' ')}\n      icon={\n        newType !== undefined ? filterChipTypes.get(newType)?.icon : unknownIcon\n      }\n      onClick={doFocus}\n      label={\n        <span>\n          <span\n            contentEditable\n            className={classes.filterInput}\n            onKeyDown={onTypeInputKeyDown}\n            onInput={onTypeInput}\n            ref={typeInput}\n          />\n          <span\n            contentEditable\n            className={[classes.filterInput, classes.hidden].join(' ')}\n            onKeyDown={onQueryInputKeyDown}\n            onInput={onQueryInput}\n            ref={queryInput}\n          />\n        </span>\n      }\n    />\n  );\n}\n\nexport default function FilterChip({\n                                     filter,\n                                     onDelete\n                                   }: {\n  filter: Filter;\n  onDelete: () => void;\n}) {\n  const classes = useStyles();\n\n  const chipType = filterChipTypes.get(filter.type);\n  if (chipType == null) return null;\n\n  return (\n    <Chip\n      className={classes.chip}\n      onDelete={onDelete}\n      icon={chipType.icon}\n      label={\n        <span>\n          <span className={classes.filterName}>{chipType.text}</span>\n          <span className={classes.filterQuery}>{filter.query}</span>\n        </span>\n      }\n      color=\"primary\"\n    />\n  );\n}\n\n\nexport function ExampleChip({ type }: { type: FilterType }) {\n  const classes = useStyles();\n\n  const chipType = filterChipTypes.get(type);\n  if (chipType == null) return null;\n\n  return (\n    <Chip\n      variant={'outlined'}\n      className={[classes.chip, classes.exampleChip].join(' ')}\n      icon={chipType.icon}\n      label={\n        <span>\n          {chipType.text} ...\n        </span>\n      }\n      color=\"secondary\"\n    />\n  );\n}\n","import {Button, Dialog, DialogActions, DialogContent, DialogTitle, Paper} from '@material-ui/core';\nimport React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    helpCard: {\n      padding: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    }\n  }\n));\n\nexport function HelpCard() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.helpCard} variant={'outlined'}>\n      {\n        // Object.keys(FilterType).map(k => <ExampleChip type={FilterType[k]}/>)\n      }\n    </Paper>\n  );\n}\n\nexport function HelpDialog({ open, onClose }: { open: boolean, onClose: () => void }) {\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" onClose={onClose} open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Help</DialogTitle>\n      <DialogContent>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Box, Collapse, Paper } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilterChip, { InputChip } from './FilterChip';\nimport { Filter } from '../constants/types';\nimport { HelpCard } from './Help';\n\nconst useStyles = makeStyles((theme) => ({\n  queries: {\n    padding: theme.spacing(1),\n    boxSizing: 'border-box',\n    marginTop: 0\n  },\n  filterName: {\n    color: theme.palette.primary.light,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nexport default function FiltersInput(props: {\n  onFiltersChanged: (filters: Array<Filter>) => void,\n  showHelp: boolean\n}): JSX.Element {\n  const classes = useStyles();\n  const [filters, setFilters] = useState<Array<Filter>>([]);\n\n  const deleteFilter = (index: number) => {\n    const newFilters = filters.filter((_, i) => i !== index);\n    setFilters(newFilters);\n    props.onFiltersChanged(newFilters);\n  };\n\n  const addFilter = (filter: Filter): void => {\n    const newFilters = [\n      ...filters.filter((f) => f.type !== filter.type),\n      filter\n    ];\n    setFilters(newFilters);\n    props.onFiltersChanged(newFilters);\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.queries}>\n      <Box>\n        {filters.map((filter, index) => (\n          <FilterChip\n            key={filter.type}\n            filter={filter}\n            onDelete={() => deleteFilter(index)}\n          />\n        ))}\n        <InputChip\n          onAddFilter={addFilter}\n          onDeletePrevious={() => deleteFilter(filters.length - 1)}\n        />\n      </Box>\n      <Collapse in={props.showHelp}>\n        <HelpCard />\n      </Collapse>\n    </Paper>\n  );\n}\n","import {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  FormGroup\n} from '@material-ui/core';\nimport React, {useContext} from 'react';\nimport {ConfigContext} from '../containers/App';\n\nexport function SettingsDialog({ open, onClose }: { open: boolean, onClose: () => void }) {\n  const { config, setConfig } = useContext(ConfigContext);\n\n  const togglePronunciation = () => setConfig({ ...config, showPronunciations: !config.showPronunciations });\n  const toggleDefinitions = () => setConfig({ ...config, showDefinitions: !config.showDefinitions });\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" onClose={ onClose } open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\n        <DialogContent>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={config.showPronunciations}\n                  onChange={togglePronunciation}/>}\n              label=\"Show pronunciations\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={config.showDefinitions}\n                  onChange={toggleDefinitions}/>}\n              label=\"Show definitions\"\n            />\n          </FormGroup>\n        </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useState} from 'react';\nimport {AppBar, Box, Icon, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport WordsTable, {TableWord} from './WordsTable';\nimport FiltersInput from './FiltersInput';\nimport {ApiWord, Filter, filterQueries, phonemeMap, posCodes} from '../constants/types';\nimport {SettingsDialog} from './Settings';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    fontFamily: 'monospace',\n    marginLeft: theme.spacing(2),\n    fontWeight: 'bold',\n    flex: 1\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  footer: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst API_ROOT = 'https://api.datamuse.com/words?';\n\nexport default function Home(): JSX.Element {\n  const classes = useStyles();\n\n  const [words, setWords] = useState<Array<TableWord> | undefined>(undefined);\n\n  const processWords = (apiWords: Array<ApiWord>) => {\n    setWords(apiWords.map(word => {\n      const ipa = word.tags\n        .find(tag => tag.startsWith('ipa_pron'))?.substring(9);\n      const phonemes = word.tags\n        .find(tag => tag.startsWith('pron'))?.substring(5).replace(/[0-9]/gi, '').trim().split(' ')\n          // @ts-ignore\n        .map(phoneme => phonemeMap[phoneme]).join('-');\n\n      const meanings = word.defs\n        ? word.defs\n          .map(def => def.split('\\t'))\n              // @ts-ignore\n          .map(([posCode, def]) => ({ partOfSpeech: posCodes[posCode], definition: def }))\n        : undefined;\n\n      return {\n        word: word.word,\n        meanings,\n        ipa,\n        phonemes,\n        score: word.score\n      } as TableWord;\n    }));\n  };\n\n  const onFiltersChanged = (filters: Array<Filter>) => {\n    if (!filters.length) {\n      setWords(undefined);\n      return;\n    }\n\n    const query =\n      API_ROOT +\n      filters\n        .map((filter) => `${filterQueries.get(filter.type)}=${filter.query}`)\n        .concat(['max=1000'])\n        .concat(['md=dr'])\n        .concat(['ipa=1'])\n        .join('&');\n\n    fetch(query)\n      .then((res) => res.json())\n      .then(processWords)\n      .catch(console.error);\n  };\n\n  const [ settingsOpen, setSettingsOpen ] = useState(false);\n  const toggleSettings = () => setSettingsOpen(!settingsOpen);\n\n  const [ helpOpen, setHelpOpen ] = useState(false);\n  const toggleHelp = () => setHelpOpen(!helpOpen);\n\n  return (\n    <Box height=\"100%\" className={classes.container}>\n      <AppBar position=\"sticky\">\n        <Toolbar className=\"draggable\">\n          <Icon fontSize=\"large\">translate</Icon>\n          <Typography variant=\"h6\" className={classes.logo}>\n            Lexi\n          </Typography>\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={toggleHelp}\n            tabIndex={-1}\n            className=\"not-draggable\"\n          >\n            <Icon>help</Icon>\n          </IconButton>\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={toggleSettings}\n            tabIndex={-1}\n            className=\"not-draggable\"\n          >\n            <Icon>settings</Icon>\n          </IconButton>\n        </Toolbar>\n        <Box p={2} paddingTop={0}>\n          <FiltersInput onFiltersChanged={onFiltersChanged} showHelp={helpOpen}/>\n        </Box>\n      </AppBar>\n      <SettingsDialog open={settingsOpen} onClose={toggleSettings} />\n      <Box style={{ overflow: 'auto', flexGrow: 1, scrollBehavior: 'smooth' }} display={'flex'}  justifyContent={'center'}>\n        <WordsTable words={words}/>\n      </Box>\n        <Paper square className={classes.footer} variant=\"outlined\">\n          <Typography variant=\"subtitle2\" color=\"inherit\">\n            {`${words !== undefined ? words.length : 0  } results`}\n          </Typography>\n        </Paper>\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport Home from '../components/Home';\n\nexport type Config = {\n  showPronunciations: boolean,\n  showDefinitions: boolean,\n}\n\nconst defaultConfig: Config = {\n  showPronunciations: true,\n  showDefinitions: true,\n};\n\nexport const ConfigContext = React.createContext<{config: Config, setConfig: (config: Config) => void}>({config: defaultConfig, setConfig: () => {}});\n\n\nexport default function App() {\n\n  const [state, setStateUnsaved] = useState<Config>( defaultConfig );\n\n  const setConfig = (config: Config) => {\n    setStateUnsaved(config);\n  }\n\n  return <ConfigContext.Provider value={{ config: state, setConfig }}>\n    <Home/>\n  </ConfigContext.Provider>;\n\n}\n","import React from 'react';\nimport {hydrate, render} from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./containers/App\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement?.hasChildNodes()) {\n    hydrate(<App />, rootElement);\n} else {\n    render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}